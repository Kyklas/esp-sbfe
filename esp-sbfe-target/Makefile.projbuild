# ESP32 Secure Boot & Flash Encryption target
#
# extends the ESP IDF to handle flashing and reflashing devices with secure boot
# and flash encryption enabled dynamically
#

include $(COMPONENT_PATH)/../esp-sbfe-common/esp-sbfe-common.mk
include $(COMPONENT_PATH)/esp-sbfe-declarations.mk

#
# Calling SBFE targets
#

SBFE_CMD_MAKE= + \
	PROJECT_PATH= \
	COMPONENT_DIRS= \
	SBFE_VAR_SECURE_BOOT=$(SBFE_DEV_SECUREBOOT_SET) \
	SBFE_VAR_FLASH_ENCRYPTION=$(SBFE_DEV_ENCRYPTION_SET) \
	SBFE_VAR_KEY_DIR=$(SBFE_DEV_KEYS_DIR_FINAL) \
	$(MAKE) -C $(SBFE_CMPT_DIR)/esp-sbfe-subproject/ \
	V=$(V) \
	BUILD_DIR_BASE=$(BUILD_DIR_BASE)/esp-sbfe \
	TEST_COMPONENTS= \
	TESTS_ALL= \
	EXCLUDE_COMPONENTS=



.PHONY: sbfe-pjr sbfe-export

# Exporting variable to subproject
sbfe-export:
	$(eval $(foreach V,$(sort $(.VARIABLES)), \
		$(if $(filter SBFE_VAR%,$V), export $V )))

sbfe-pjr: sbfe-export
	$(SBFE_CMD_MAKE) $@

#
SBFE_FLASH_CHECK_DEP?=
.SECONDEXPANSION:
sbfe-flash-check: sbfe-check-compat $$(SBFE_FLASH_CHECK_DEP)


#
# SBFE Burn Key
#

# Device MAC Directory is set by sbfe-info target
SBFE_DEV_MAC_DIR?=

# default directory to save key 
SBFE_BURN_CMPT_KEY_DIR:=$(abspath $(COMPONENT_PATH)/../esp-sbfe-keys)
# can be overwriten
SBFE_BURN_KEY_DIR?=$(SBFE_BURN_CMPT_KEY_DIR)
# Export to subproject
SBFE_VAR_BURN_KEY_DIR=$(SBFE_BURN_KEY_DIR)/$(SBFE_DEV_MAC_DIR)

SBFE_BURN_TARGETS=sbfe-burn sbfe-burn-sb sbfe-burn-fe

.PHONY: $(SBFE_BURN_TARGETS)

sbfe-burnable-check: sbfe-burnable
	$(if $(filter $(SBFE_VAR_BLK1_BURNABLE).$(SBFE_VAR_BLK2_BURNABLE),0.0),\
	$(call sbfe_notify,FAIL : No keys are burnable !!); exit 1)

$(SBFE_BURN_TARGETS): sbfe-burnable-check sbfe-export
	$(SBFE_CMD_MAKE) $@


# Testing

sbfe-test-dep: sbfe-export sbfe-flash-all-dep
	$(eval SBFE_DEV_KEYS_DIR_FINAL=$(abspath esp-sbfe-components/esp-sbfe-keys/80-7d-3a-81-ed-08))
	$(eval export SBFE_VAR_DRY_RUN=1)
	
sbfe-test-none: SBFE_DEV_SECUREBOOT_SET=0 
sbfe-test-none: SBFE_DEV_ENCRYPTION_SET=0
sbfe-test-none: sbfe-test-dep
	$(SBFE_CMD_MAKE) sbfe-flash-all

sbfe-test-fe: SBFE_DEV_SECUREBOOT_SET=0 
sbfe-test-fe: SBFE_DEV_ENCRYPTION_SET=1
sbfe-test-fe: sbfe-test-dep
	$(SBFE_CMD_MAKE) sbfe-flash-all

sbfe-test-sb: SBFE_DEV_SECUREBOOT_SET=1 
sbfe-test-sb: SBFE_DEV_ENCRYPTION_SET=0
sbfe-test-sb: sbfe-test-dep
	$(SBFE_CMD_MAKE) sbfe-flash-all

sbfe-test-sbfe: SBFE_DEV_SECUREBOOT_SET=1 
sbfe-test-sbfe: SBFE_DEV_ENCRYPTION_SET=1
sbfe-test-sbfe: sbfe-test-dep 
	$(SBFE_CMD_MAKE) sbfe-flash-all
