# ESP32 Secure Boot & Flash Encryption target
#
# extends the ESP IDF to handle flashing and reflashing devices with secure boot
# and flash encryption enabled dynamically
#

#
# SBFE check compatibility
#

.PHONY: sbfe-dev-check

.ONESHELL:
SHELL=/bin/bash
sbfe-flash-check: sbfe-info
	if [[ $(SBFE_DEV_SECUREBOOT_SET) -eq 1 ]] && [[ -z "$(SBFE_DEV_KEYS_DIR_FINAL)" ]]; then
		echo "Device has Secure Boot enable but not keys are available"
		exit 1
	fi
	
	# Does not support flash re-encryption, re-encryption does not work with secure boot anyway	
	if [[ $(SBFE_DEV_ENCRYPTION_SET) -gt 0 ]] && [[ -z "$(SBFE_DEV_KEYS_DIR_FINAL)" ]]; then
		echo "Device has Flash Encryption enable but not keys are available"
		exit 1
	fi

include $(COMPONENT_PATH)/../esp-sbfe-common/esp-sbfe-common.mk
include $(COMPONENT_PATH)/esp-sbfe-declarations.mk

#
# Calling SBFE targets
#

SBFE_CMD_MAKE= + \
	PROJECT_PATH= \
	COMPONENT_DIRS= \
	SBFE_VAR_SECURE_BOOT=$(SBFE_DEV_SECUREBOOT_SET) \
	SBFE_VAR_FLASH_ENCRYPTION=$(SBFE_DEV_ENCRYPTION_SET) \
	SBFE_VAR_KEY_DIR=$(SBFE_DEV_KEYS_DIR_FINAL) \
	$(MAKE) -C $(SBFE_CMPT_DIR)/esp-sbfe-subproject/ \
	V=$(V) \
	BUILD_DIR_BASE=$(BUILD_DIR_BASE)/esp-sbfe \
	TEST_COMPONENTS= \
	TESTS_ALL= \
	EXCLUDE_COMPONENTS=

SBFE_FLASH_TARGETS=sbfe-pjr

.PHONY: $(SBFE_FLASH_TARGETS) sbfe-export

# Exporting variable to subproject
sbfe-export:
	$(eval $(foreach V,$(sort $(.VARIABLES)), \
		$(if $(filter SBFE_VAR%,$V), export $V )))

$(SBFE_FLASH_TARGETS): sbfe-flash-check sbfe-export
	$(SBFE_CMD_MAKE) $@

# Testing

sbfe-test-dep: sbfe-export sbfe-flash-all-dep
	$(eval SBFE_DEV_KEYS_DIR_FINAL=$(abspath esp-sbfe-components/esp-sbfe-keys/80-7d-3a-81-ed-08))
	$(eval export SBFE_VAR_DRY_RUN=1)
	
sbfe-test-none: SBFE_DEV_SECUREBOOT_SET=0 
sbfe-test-none: SBFE_DEV_ENCRYPTION_SET=0
sbfe-test-none: sbfe-test-dep
	$(SBFE_CMD_MAKE) sbfe-flash-all

sbfe-test-fe: SBFE_DEV_SECUREBOOT_SET=0 
sbfe-test-fe: SBFE_DEV_ENCRYPTION_SET=1
sbfe-test-fe: sbfe-test-dep
	$(SBFE_CMD_MAKE) sbfe-flash-all

sbfe-test-sb: SBFE_DEV_SECUREBOOT_SET=1 
sbfe-test-sb: SBFE_DEV_ENCRYPTION_SET=0
sbfe-test-sb: sbfe-test-dep
	$(SBFE_CMD_MAKE) sbfe-flash-all

sbfe-test-sbfe: SBFE_DEV_SECUREBOOT_SET=1 
sbfe-test-sbfe: SBFE_DEV_ENCRYPTION_SET=1
sbfe-test-sbfe: sbfe-test-dep 
	$(SBFE_CMD_MAKE) sbfe-flash-all
